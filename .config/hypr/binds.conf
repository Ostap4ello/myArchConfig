#!/bin/bash

### Keybindings cfg
# See https://wiki.hyprland.org/Configuring/Binds/ for more

$mainMod = SUPER # Sets "Windows" key as main modifier

## Functionality

# Session
bind = CTRL_ALT, code:119, exec,  ~/.config/hypr/scripts/power.bash
# bind = $mainMod, L, exec, hyprlock
bind = $mainMod, L, exec, loginctl lock-session
bind = $mainMod, C, killactive,
bind = $mainMod CTRL, M, exit,

# Quick launch
bind = $mainMod, Q, exec, $terminal
bind = $mainMod SHIFT, Q, exec, neovide -- -u ~/.config/neoterm/neoterm.lua
# bind = $mainMod, E, exec, $fileManager
bind = $mainMod, R, exec, $menu  # launch menu
# bind = $mainMod, P, exec, nwg-displays
bind = $mainMod, P, exec,$terminal --title "screens_floating" nvim ~/.config/hypr/monitors.conf

# Screenshots
bind = $mainMod SHIFT, S, exec, grim -t png -g "$(slurp -o -d)" - | swappy -f - #-o "$HOME/Pictures/$(date '+screenshot-%Y-%m-%d-%T.png')"
bind = , code:107, exec, grim -t png - | swappy -f - -o "$HOME/Pictures/$(date '+screenshot-%Y-%m-%d-%T.png')"
bind = CTRL_ALT, code:107, exec, ~/.config/hypr/scripts/screenshot.bash

# Clipboard
bind = $mainMod, V, exec, cliphist list | rofi -dmenu | cliphist decode | wl-copy
bind = $mainMod, E, exec, rofi -modi emoji -show emoji
bind = $mainMod, K, exec, rofi -show calc -modi calc -no-show-match -no-sort

# Volume
bind = , code:121, exec, pamixer -t; notify-send -a "Hyprland" "Volume: $(pamixer --get-volume-human)" -e -t 1000 -r 121 #output
bind = , code:122, exec, pamixer -d 10 --set-limit 200 --allow-boost; notify-send -a "Hyprland" "Volume: $(pamixer --get-volume-human)" -e -t 1000 -r 121
bind = , code:123, exec, pamixer -i 10 --set-limit 200 --allow-boost; notify-send -a "Hyprland" "Volume: $(pamixer --get-volume-human)" -e -t 1000 -r 121
bind = , code:198, exec, pactl set-source-mute @DEFAULT_SOURCE@ toggle #input/mic

# Brightness
bind = , code:232, exec, brightnessctl s 10%-; notify-send -a "Hyprland" "Brightness: $( echo "$(brightnessctl g)*100/504" | bc )% " -e -t 1000 -r 121; # ddcutil setvcp 10 - 10
bind = , code:233, exec, brightnessctl s +10%; notify-send -a "Hyprland" "Brightness: $( echo "$(brightnessctl g)*100/504" | bc )% " -e -t 1000 -r 121; # ddcutil setvcp 10 + 10
# externals only
#  notify-send -a "Hyprland" "External Brightness: $(ddcutil getvcp 10 | awk '{print $4}')" -e -t 1000 -r 121
bind = CTRL, code:232, exec, ddcutil setvcp 10 - 10; notify-send -a "Hyprland" "External Brightness: -10" -e -t 1000 -r 122
bind = CTRL, code:233, exec, ddcutil setvcp 10 + 10; notify-send -a "Hyprland" "External Brightness: +10" -e -t 1000 -r 122

## Window operations

# Focus
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
# # hjkl binds
# bind = $mainMod, h, movefocus, l
# bind = $mainMod, j, movefocus, d
# bind = $mainMod, k, movefocus, u
# bind = $mainMod, l, movefocus, r
# List all windows of the session and focus the chosen one
bind = $mainMod, W, exec, $winmenu
# Resize
bind = $mainMod SHIFT, right, resizeactive, 20% 0
bind = $mainMod SHIFT, left, resizeactive, -20% 0
bind = $mainMod SHIFT, up, resizeactive, 0 -20%
bind = $mainMod SHIFT, down, resizeactive, 0 20%

# Move
bind = $mainMod CTRL, right, movewindow, r
bind = $mainMod CTRL, left, movewindow, l
bind = $mainMod CTRL, up, movewindow, u
bind = $mainMod CTRL, down, movewindow, d
# Move floating
# bind = $mainMod CTRL, right, movewindow, r
# bind = $mainMod CTRL, left, movewindow, l
# bind = $mainMod CTRL, up, movewindow, u
# bind = $mainMod CTRL, down, movewindow, d

# Additional to move
bind = $mainMod, J, togglesplit, # dwindle
# bind = $mainMod, P, pseudo, # dwindle

# Float/fullscreen
bind = $mainMod, F, togglefloating,
bind = $mainMod SHIFT, F, fullscreen,
bind = , code:95, fullscreen,

# Move focused workspace to chosen monitor (max 4 monitors)
bind = $mainMod CTRL, 1, movecurrentworkspacetomonitor, 0
bind = $mainMod CTRL, 2, movecurrentworkspacetomonitor, 1
bind = $mainMod CTRL, 3, movecurrentworkspacetomonitor, 2
bind = $mainMod CTRL, 4, movecurrentworkspacetomonitor, 3
# for numpad
bind = $mainMod CTRL, code:90, movecurrentworkspacetomonitor, 0
bind = $mainMod CTRL, code:87, movecurrentworkspacetomonitor, 1
bind = $mainMod CTRL, code:88, movecurrentworkspacetomonitor, 2
bind = $mainMod CTRL, code:89, movecurrentworkspacetomonitor, 3

# Switch workspaces
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, togglespecialworkspace, magic
# for numpad
bind = $mainMod, code:87, workspace, 1
bind = $mainMod, code:88, workspace, 2
bind = $mainMod, code:89, workspace, 3
bind = $mainMod, code:83, workspace, 4
bind = $mainMod, code:84, workspace, 5
bind = $mainMod, code:85, workspace, 6
bind = $mainMod, code:79, workspace, 7
bind = $mainMod, code:80, workspace, 8
bind = $mainMod, code:81, workspace, 9
bind = $mainMod, code:90, togglespecialworkspace, magic

# Move active window to a workspace
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, special:magic
# for numpad
bind = $mainMod SHIFT, code:87, movetoworkspace, 1
bind = $mainMod SHIFT, code:88, movetoworkspace, 2
bind = $mainMod SHIFT, code:89, movetoworkspace, 3
bind = $mainMod SHIFT, code:83, movetoworkspace, 4
bind = $mainMod SHIFT, code:84, movetoworkspace, 5
bind = $mainMod SHIFT, code:85, movetoworkspace, 6
bind = $mainMod SHIFT, code:79, movetoworkspace, 7
bind = $mainMod SHIFT, code:80, movetoworkspace, 8
bind = $mainMod SHIFT, code:81, movetoworkspace, 9
bind = $mainMod SHIFT, code:90, movetoworkspace, special:magic

# Reload display configuration
bind = CTRL ALT, P, exec, $HOME/.config/hypr/scripts/reload-displays.bash

# Example special workspace
bind = $mainMod, U, togglespecialworkspace, magic
bind = $mainMod SHIFT, U, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# bind = $mainMod SHIFT, W, overview:toggle
# bind = $mainMod SHIFT, W, hyprexpo:expo, toggle

# Mouse control
# If you do not use cursor timeout or cursor:hide_on_key_press, you can delete its respective cals
# bind=$mainMod,g,exec,hyprctl keyword cursor:inactive_timeout 0; hyprctl keyword cursor:hide_on_key_press false; hyprctl dispatch submap cursor
bind = $mainMod, M, submap, cursor

submap=cursor

# Jump cursor to a position
bind= , a, exec, hyprctl dispatch submap reset && wl-kbptr && hyprctl dispatch submap cursor
bind= , f, exec, hyprctl dispatch submap reset && wl-kbptr && hyprctl dispatch submap cursor
# Mouse buttons
bind= , u, exec, wlrctl pointer click left
bind= , i, exec, wlrctl pointer click middle
bind= , o, exec, wlrctl pointer click right
# Cursor movement
binde= , j, exec, wlrctl pointer move 0 10
binde= , k, exec, wlrctl pointer move 0 -10
binde= , l, exec, wlrctl pointer move 10 0
binde= , h, exec, wlrctl pointer move -10 0
# wlrctl scroll does not work
# # Scroll up and down
# binde= , e, exec, wlrctl pointer scroll 10 0
# binde= , d, exec, wlrctl pointer scroll -10 0
# # Scroll left and right
# binde= , t, exec, wlrctl pointer scroll 0 -10
# binde= , g, exec, wlrctl pointer scroll 0 10
# Exit cursor submap
# If you do not use cursor timeout or cursor:hide_on_key_press, you can delete its respective cals
# bind=,escape,exec,hyprctl keyword cursor:inactive_timeout 3; hyprctl keyword cursor:hide_on_key_press true; hyprctl dispatch submap reset 
bind= , escape, exec, hyprctl dispatch submap reset
bind = $mainMod, M, submap, cursor

submap = reset

bind = $mainMod, H, exec, ~/GitRepos/goodnight-mouse/builddir/goodnight_mouse -c ~/.config/goodnight_mouse/goodnight_mouse.cfg -o 

